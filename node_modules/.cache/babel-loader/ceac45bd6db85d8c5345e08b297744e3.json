{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group\"\n};\nconst _hoisted_2 = {\n  class: \"list-group-item d-flex justify-content-between align-items-start\"\n};\nconst _hoisted_3 = {\n  class: \"ms-2 me-auto\"\n};\nconst _hoisted_4 = {\n  class: \"fw-bold\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ol\", _hoisted_1, [_createElementVNode(\"li\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.song.title), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.song.artists, (artist, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString($options.nameWithComma(index)) + \" \", 1\n    /* TEXT */\n    ), _hoisted_5]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;AACQA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;AACDA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;gCAGXC,oBAAa,MAAb,EAAa,IAAb,EAAa,IAAb,EAAa;AAAA;AAAb;;;uBANZC,oBAUK,IAVL,cAUK,CATDD,oBAQK,IARL,cAQK,CAPDA,oBAMM,KANN,cAMM,CALFA,oBAAyC,KAAzC,cAAyCE,iBAAlBC,YAAKC,KAAa,CAAzC,EAAiC;AAAA;AAAjC,GAKE,qBAJFH,oBAGOI,SAHP,EAGO,IAHP,EAGOC,YAHsCH,YAAKI,OAG3C,EAHkD,CAA9BC,MAA8B,EAAtBC,KAAsB,KAAjB;yBAAxCR,oBAGO,MAHP,EAGO;AAHAS,SAAG,EAAED;AAGL,KAHP,EAAiB,mCACfE,uBAAcF,KAAd,KAAsB,KACxB;AAAA;KAFiB,EAEjBG,UAFiB,CAAjB;GAGO,CAHP;;AAAA,GAIE,EANN,CAOC,CARL,CASC,CAVL","names":["class","_createElementVNode","_createElementBlock","_toDisplayString","$props","title","_Fragment","_renderList","artists","artist","index","key","$options","_hoisted_5"],"sourceRoot":"","sources":["/home/jacklinde/Documents/GitHub/stuko/src/components/SongItem.vue"],"sourcesContent":["<template>\n    <ol class=\"list-group\">\n        <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n            <div class=\"ms-2 me-auto\">\n                <div class=\"fw-bold\">{{song.title}}</div>\n                <span :key=\"index\" v-for=\"(artist, index) in song.artists\">\n                {{nameWithComma(index)}}\n                <span></span>\n                </span>\n            </div>\n        </li>\n    </ol>\n</template>\n\n<script>\nexport default {\n    name: 'SongItem',\n    props: {\n        song: Object\n    },\n    methods: {\n        nameWithComma(index){\n            if (index !== this.song.artists.length-1) {\n                return `${this.song.artists[index]},`\n            } else {\n                return this.names[index]\n            }\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}