{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Song\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputTitle\",\n  class: \"form-label\"\n}, \"Titel\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"invalid-feedback\"\n}, \" Voeg een titel toe. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  for: \"inputArtists\",\n  class: \"form-label\"\n};\nconst _hoisted_7 = [\"onUpdate:modelValue\", \"name\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"invalid-feedback\"\n}, \" Voeg ten minste 1 artiest toe. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"mb-3\"\n};\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputLyrics\",\n  class: \"form-label\"\n}, \"Tekst\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"invalid-feedback\"\n}, \" Voeg songtekst toe. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"d-grid col-6 mx-auto\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Voeg toe\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    class: \"col-md-6 offset-md-3 needs-validation\",\n    onSubmit: _cache[3] || (_cache[3] = (...args) => $options.submit && $options.submit(...args)),\n    novalidate: \"\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    class: \"form-control\",\n    id: \"inputTitle\",\n    required: \"\",\n    autofocus: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.title]]), _hoisted_5]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.artists, (artist, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"mb-3\",\n      key: index\n    }, [_createElementVNode(\"label\", _hoisted_6, \"Artiest \" + _toDisplayString(index + 1), 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.artists[index] = $event,\n      name: `artists[${index}]`,\n      class: \"form-control\",\n      id: \"inputArtists\",\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), [[_vModelText, $data.artists[index]]]), _hoisted_8]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addArtist && $options.addArtist(...args)),\n    class: \"btn btn-link\"\n  }, \"+ Voeg artiest toe\")]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.lyrics = $event),\n    name: \"inputLyrics\",\n    id: \"inputLyrics\",\n    rows: \"10\",\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.lyrics]]), _hoisted_12]), _hoisted_13], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_2","onSubmit","$options","novalidate","_hoisted_4","$data","$event","id","required","autofocus","_hoisted_5","_Fragment","_renderList","artist","index","key","_toDisplayString","name","_hoisted_8","onClick","_hoisted_11","rows","_hoisted_12","_hoisted_13"],"sourceRoot":"","sources":["/home/jacklinde/Documents/GitHub/stuko/src/views/AddSong.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h2>Add Song</h2>\n        <form class=\"col-md-6 offset-md-3 needs-validation\" v-on:submit=\"submit\" novalidate> \n            <div class=\"mb-3\">\n                <label for=\"inputTitle\" class=\"form-label\">Titel</label>\n                <input type=\"text\" v-model=\"title\" class=\"form-control\" id=\"inputTitle\" required autofocus>\n                <div class=\"invalid-feedback\">\n                    Voeg een titel toe.\n                </div>\n            </div>\n            <div class=\"mb-3\" v-for=\"(artist, index) in artists\" :key=\"index\">\n                <label for=\"inputArtists\" class=\"form-label\">Artiest {{index+1}}</label>\n                <input type=\"text\" v-model=\"artists[index]\" :name=\"`artists[${index}]`\" class=\"form-control\" id=\"inputArtists\" required>\n                <div class=\"invalid-feedback\">\n                    Voeg ten minste 1 artiest toe.\n                </div>\n            </div>\n            <div class=\"mb-3\">\n                <button type=\"button\" @click=\"addArtist\" class=\"btn btn-link\">+ Voeg artiest toe</button>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"inputLyrics\" class=\"form-label\">Tekst</label>\n                <textarea v-model=\"lyrics\" name=\"inputLyrics\" id=\"inputLyrics\" rows=\"10\" class=\"form-control\" required></textarea>\n                <div class=\"invalid-feedback\">\n                    Voeg songtekst toe.\n                </div>\n            </div>\n            <div class=\"d-grid col-6 mx-auto\">\n                <button type=\"submit\" class=\"btn btn-primary\">Voeg toe</button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"AddSong\",\n    data() {\n        return  {\n            title: '',\n            artists: [''],\n            lyrics: ''\n        }\n    },\n    methods: {\n        addArtist() {\n            this.artists.push('')\n        },\n        async submit() {\n            const submit = {\n                title: this.title,\n                artists: this.artists.filter(e => e),\n                lyrics: this.lyrics\n            }\n\n\n             const res = await fetch('/api/songs', {\n                 method: 'POST',\n                 headers: {\n                     'Content-Type': 'application/json'\n                 },\n                 body: JSON.stringify(submit)\n             })\n\n             await res.json()\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}