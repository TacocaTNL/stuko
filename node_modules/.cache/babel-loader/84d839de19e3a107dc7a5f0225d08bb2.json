{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-36823ea4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.song.title), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.song.artists, (artist, index) => {\n    return _openBlock(), _createElementBlock(\"h4\", {\n      key: index\n    }, _toDisplayString($options.nameWithComma(index)), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"p\", null, _toDisplayString($data.song.lyrics), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;AACSA,OAAK,EAAC;;;uBAAXC,oBAIM,KAJN,cAIM,CAHFC,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBC,iBAAjBC,WAAKC,KAAY,CAAvB,EAAgB;AAAA;AAAhB,GAGE,qBAFFJ,oBAAsFK,SAAtF,EAAsF,IAAtF,EAAsFC,YAAxDH,WAAKI,OAAmD,EAA5C,CAA9BC,MAA8B,EAAtBC,KAAsB,KAAjB;yBAAzBT,oBAAsF,IAAtF,EAAsF;AAAzCU,SAAG,EAAED;AAAoC,KAAtF,EAAuDP,iBAAIS,uBAAcF,KAAd,CAAJ,CAAvD,EAA8E;AAAA;AAA9E;GAAsF,CAAtF;;AAAA,GAEE,GADFR,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBC,iBAAjBC,WAAKS,MAAY,CAAvB,EAAiB;AAAA;AAAjB,GACE,CAJN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data","title","_Fragment","_renderList","artists","artist","index","key","$options","lyrics"],"sourceRoot":"","sources":["/home/jacklinde/Documents/GitHub/stuko/src/views/Lyrics.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h2>{{song.title}}</h2>\n        <h4 v-for=\"(artist, index) in song.artists\" :key=\"index\">{{nameWithComma(index)}}</h4>\n        <p> {{song.lyrics}}</p>\n    </div>\n</template>\n\n<style scoped>\np {\n    text-align: left;\n    white-space: pre-wrap;\n}\n</style>\n\n<script>\nexport default {\n    name: \"Lyrics\",\n    props: {\n        \n    },\n    data() {\n        return {\n            song: []\n        }\n    },\n    methods: {\n        async fetchSong(id) {\n            const res = await fetch(`../api/songs/${id}`);\n            const data = await res.json();\n\n            return data;\n        },\n        nameWithComma(index){\n            if (index !== this.song.artists.length-1) {\n                return `${this.song.artists[index]}, `\n            } else {\n                return this.song.artists[index]\n            }\n        }\n    },\n    async created() {\n        const songId = await this.$route.params.songId\n        this.song = await this.fetchSong(songId)\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}